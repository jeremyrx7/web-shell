name: 🔄 Update Widget Dependencies

# This workflow is triggered by a repository dispatch event from the widget-library
# when new widget packages are published. It automatically updates the dependencies
# and creates a pull request with the changes.

on:
  repository_dispatch:
    types: [widget-packages-updated]
  workflow_dispatch:
    inputs:
      packages:
        description: "Packages to update (JSON format)"
        required: true
        default: "[]"
      force_update:
        description: "Force update even if no changes detected"
        type: boolean
        default: false

env:
  NODE_VERSION: "20"
  NPM_REGISTRY: "https://npm.pkg.github.com"

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: 📦 Update Widget Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Configure NPM for GitHub Packages
        run: |
          echo "@jeremyrx7:registry=${{ env.NPM_REGISTRY }}" >> ~/.npmrc
          echo "${{ env.NPM_REGISTRY }}/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      - name: Extract package information
        id: extract-packages
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            PACKAGES='${{ github.event.client_payload.published_packages }}'
            NEW_VERSION='${{ github.event.client_payload.new_version }}'
            SOURCE_REPO='${{ github.event.client_payload.source_repo }}'
            WORKFLOW_RUN_URL='${{ github.event.client_payload.workflow_run_url }}'
          else
            PACKAGES='${{ github.event.inputs.packages }}'
            NEW_VERSION="manual-update"
            SOURCE_REPO="manual"
            WORKFLOW_RUN_URL=""
          fi

          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT
          echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "source-repo=$SOURCE_REPO" >> $GITHUB_OUTPUT
          echo "workflow-run-url=$WORKFLOW_RUN_URL" >> $GITHUB_OUTPUT

          echo "Packages to update: $PACKAGES"
          echo "New version: $NEW_VERSION"

      - name: Update package.json dependencies
        id: update-deps
        env:
          PACKAGES_TO_UPDATE: ${{ steps.extract-packages.outputs.packages }}
          FORCE_UPDATE: ${{ github.event.inputs.force_update || 'false' }}
        run: |
          node scripts/update-widget-dependencies.js

      - name: Create pull request
        if: steps.update-deps.outputs.has-changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            🔄 Update widget dependencies to ${{ steps.extract-packages.outputs.new-version }}

            Auto-generated by widget-library publish workflow
          title: "🔄 Update widget dependencies to ${{ steps.extract-packages.outputs.new-version }}"
          body: |
            ## 🔄 Widget Dependencies Update

            This PR was automatically created in response to new widget package publications.

            ### 📦 Updated Packages
            ${{ steps.update-deps.outputs.summary && fromJson(steps.update-deps.outputs.summary).updatedPackages && join(fromJson(steps.update-deps.outputs.summary).updatedPackages.*.name, ', ') || 'None specified' }}

            ### 🔗 Source Information
            - **Source Repository:** ${{ steps.extract-packages.outputs.source-repo }}
            - **Widget Library Version:** ${{ steps.extract-packages.outputs.new-version }}
            ${{ steps.extract-packages.outputs.workflow-run-url && format('- **Workflow Run:** {0}', steps.extract-packages.outputs.workflow-run-url) || '' }}

            ### 📋 Changes Made
            ${{ steps.update-deps.outputs.summary && fromJson(steps.update-deps.outputs.summary).updatedPackages && join(fromJson(steps.update-deps.outputs.summary).updatedPackages.*.change, '
            - ') || 'No changes made' }}

            - Updated widget package dependencies in `package.json`
            - Updated `package-lock.json` with new dependency resolution

            ### 🧪 Testing
            Please test the following before merging:
            - [ ] Run `npm install` to verify dependencies resolve correctly
            - [ ] Run `npm run build` to ensure the application builds successfully
            - [ ] Run `npm run dev` to verify the application starts correctly
            - [ ] Test widget functionality if applicable

            ### 🤖 Auto-merge
            This PR can be safely auto-merged if all checks pass and no breaking changes are expected.

            ---

            _This PR was automatically generated by the widget-library publish workflow._
          branch: update-widget-dependencies-${{ steps.extract-packages.outputs.new-version }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            dependencies
            widget-library
            automated

      - name: Create workflow summary
        run: |
          echo "## 🔄 Widget Dependencies Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.update-deps.outputs.has-changes }}" = "true" ]; then
            echo "✅ **Status:** Dependencies updated and PR created" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Updated Packages:**" >> $GITHUB_STEP_SUMMARY
            echo '${{ steps.update-deps.outputs.updated-packages }}' | jq -r '.[] | "- `\(.name)`: \(.oldVersion || "none") → \(.newVersion) (\(.action))"' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Actions Taken:**" >> $GITHUB_STEP_SUMMARY
            echo "- Updated package.json with new widget package versions" >> $GITHUB_STEP_SUMMARY
            echo "- Updated package-lock.json with new dependency resolution" >> $GITHUB_STEP_SUMMARY
            echo "- Created pull request for review and merge" >> $GITHUB_STEP_SUMMARY

            # Show errors if any
            ERRORS='${{ steps.update-deps.outputs.errors }}'
            if [ "$ERRORS" != "[]" ] && [ "$ERRORS" != "" ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**⚠️ Warnings/Errors:**" >> $GITHUB_STEP_SUMMARY
              echo "$ERRORS" | jq -r '.[] | "- \(.package || "General"): \(.message)"' >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ **Status:** No updates needed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            SUMMARY='${{ steps.update-deps.outputs.summary }}'
            if [ "$SUMMARY" != "" ]; then
              TOTAL=$(echo "$SUMMARY" | jq -r '.totalPackagesProcessed // 0')
              FAILED=$(echo "$SUMMARY" | jq -r '.failedUpdates // 0')

              if [ "$TOTAL" -gt 0 ]; then
                echo "**Processing Summary:**" >> $GITHUB_STEP_SUMMARY
                echo "- Total packages processed: $TOTAL" >> $GITHUB_STEP_SUMMARY
                echo "- Failed updates: $FAILED" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
              fi
            fi

            echo "Either no packages were provided for update, or the current versions are already up to date." >> $GITHUB_STEP_SUMMARY
          fi

          if [ -n "${{ steps.extract-packages.outputs.workflow-run-url }}" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Source Workflow:** ${{ steps.extract-packages.outputs.workflow-run-url }}" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on failure
        if: failure()
        run: |
          echo "## ❌ Widget Dependencies Update Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The automatic dependency update process failed. This could be due to:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Network issues or npm registry problems" >> $GITHUB_STEP_SUMMARY
          echo "- Authentication issues with GitHub Packages" >> $GITHUB_STEP_SUMMARY
          echo "- Package version conflicts or dependency resolution errors" >> $GITHUB_STEP_SUMMARY
          echo "- Missing or invalid package information in the trigger event" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Manual Action Required:** Please review the workflow logs and update dependencies manually if needed." >> $GITHUB_STEP_SUMMARY
